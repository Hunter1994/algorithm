// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using WebApplication3;

#nullable disable

namespace WebApplication3.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20240828082625_add9")]
    partial class add9
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("BlogId");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("WebApplication3.Company", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("address")
                        .HasDefaultValueSql("''")
                        .HasComment("街道地址");

                    b.Property<int?>("BusinessStatus")
                        .HasColumnType("int(11)")
                        .HasColumnName("business_status")
                        .HasComment("[山西综改区]经营状态(1存续2注销3吊销)");

                    b.Property<string>("Businesslicense")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("businesslicense")
                        .HasComment("营业执照附件");

                    b.Property<string>("BusinesslicenseCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("businesslicense_code")
                        .HasComment("营业执照编号");

                    b.Property<DateTime?>("BusinesslicenseTime")
                        .HasColumnType("datetime")
                        .HasColumnName("businesslicense_time")
                        .HasComment("上传营业执照修改时间");

                    b.Property<string>("BusinesslicenseUser")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("businesslicense_user")
                        .HasComment("上传营业执照修改人");

                    b.Property<DateTime?>("CertificationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("certification_date")
                        .HasComment("企业认证时间");

                    b.Property<string>("CertificationReason")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("certification_reason")
                        .HasComment("企业认证失败理由");

                    b.Property<int?>("CertificationStatus")
                        .HasColumnType("int(11)")
                        .HasColumnName("certification_status")
                        .HasComment("企业认证状态（1，未认证 2，认证中 3，认证成功 4，认证失败）");

                    b.Property<DateTime?>("CheckedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("checked_time")
                        .HasComment("审批时间");

                    b.Property<string>("Cid")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cid")
                        .HasComment("企业唯一标识（用于与外部关联）");

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("city_code")
                        .HasDefaultValueSql("''")
                        .HasComment("市编号");

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("company_email")
                        .HasDefaultValueSql("''")
                        .HasComment("企业邮箱");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("company_name")
                        .HasDefaultValueSql("''")
                        .HasComment("企业名称");

                    b.Property<byte>("CompanyType")
                        .HasColumnType("tinyint(4) unsigned")
                        .HasColumnName("company_type")
                        .HasComment("企业类型：1：建设集团，2：施工单位，3：劳务企业，4：设计单位 99,其他");

                    b.Property<string>("CompanyUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("company_url")
                        .HasDefaultValueSql("''")
                        .HasComment("企业网址");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("contact")
                        .HasComment("企业联系人");

                    b.Property<string>("ContactCard")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact_card")
                        .HasComment("企业联系人身份证号");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact_phone")
                        .HasComment("企业联系人手机号");

                    b.Property<string>("CountyCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("county_code")
                        .HasDefaultValueSql("''")
                        .HasComment("县或区编号");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasDefaultValueSql("''")
                        .HasComment("创建人");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fax")
                        .HasDefaultValueSql("''")
                        .HasComment("传真");

                    b.Property<int?>("IndustryType")
                        .HasColumnType("int(11)")
                        .HasColumnName("industry_type")
                        .HasComment("行业类型（1，住建行业；2，交通行业；3，水利行业；4，制造行业 5，服务行业  ）");

                    b.Property<int?>("IsCompliance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("is_compliance")
                        .HasDefaultValueSql("'0'")
                        .HasComment("是否是规上企业，1：是，2否");

                    b.Property<byte>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4) unsigned")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("'1'")
                        .HasComment("是否删除 - 1:未删除 2:删除");

                    b.Property<DateTime>("LastModifyTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modify_time")
                        .HasComment("修改时间");

                    b.Property<string>("LastModifyUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_modify_user")
                        .HasDefaultValueSql("''")
                        .HasComment("修改人");

                    b.Property<string>("ManageAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("manage_address")
                        .HasComment("管理地详细地址");

                    b.Property<string>("ManageCityCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("manage_city_code")
                        .HasComment("管理所在市");

                    b.Property<string>("ManageCountyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("manage_county_code")
                        .HasComment("注册所在区、县");

                    b.Property<string>("ManageProvinceCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("manage_province_code")
                        .HasComment("管理所在省(自治");

                    b.Property<string>("ManageStreetCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("manage_street_code")
                        .HasComment("管理街道编号");

                    b.Property<int?>("NatureFirms")
                        .HasColumnType("int(11)")
                        .HasColumnName("nature_firms")
                        .HasComment("企业性质");

                    b.Property<string>("OrganizationCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("organization_code")
                        .HasComment("统一社会信用代码（原组织机构代码）");

                    b.Property<string>("OrganizationUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("organization_url")
                        .HasComment("统一社会信用代码附件");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("owner")
                        .HasDefaultValueSql("''")
                        .HasComment("法人");

                    b.Property<string>("OwnerCardid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("owner_cardid")
                        .HasDefaultValueSql("''")
                        .HasComment("法人身份证号");

                    b.Property<int>("OwnerCertificateType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("owner_certificate_type")
                        .HasDefaultValueSql("'1'")
                        .HasComment("法人证件类型(1,身份证2,军官证；3,护照；4,台湾居民身份证；5,港澳永久性居民身份证；6,警官证；99,其他)");

                    b.Property<string>("OwnerPhone")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("owner_phone")
                        .HasDefaultValueSql("''")
                        .HasComment("法人联系电话");

                    b.Property<string>("ProvinceCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("province_code")
                        .HasDefaultValueSql("''")
                        .HasComment("省份编号");

                    b.Property<string>("QualityTime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("quality_time")
                        .HasDefaultValueSql("''")
                        .HasComment("资质有效时间");

                    b.Property<decimal>("RegisterCapital")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("register_capital")
                        .HasComment("注册资金(万元)");

                    b.Property<int>("RegisterCurrencyType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("register_currency_type")
                        .HasDefaultValueSql("'1'")
                        .HasComment("注册资本币种");

                    b.Property<DateOnly?>("RegisterTime")
                        .HasColumnType("date")
                        .HasColumnName("register_time")
                        .HasComment("注册时间:成立日期");

                    b.Property<string>("SafetyCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("safety_code")
                        .HasDefaultValueSql("''")
                        .HasComment("安全许可证号");

                    b.Property<int>("SourceType")
                        .HasColumnType("int(11)")
                        .HasColumnName("source_type")
                        .HasComment("来源（1，注册  2，openapi导入   3，excel导入  4，天正数据 5 银行导入 6,工商局 7,政府 8,企薪）");

                    b.Property<string>("StreetName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("street_name")
                        .HasComment("街道名称");

                    b.Property<int?>("SubcontractType")
                        .HasColumnType("int(11)")
                        .HasColumnName("subcontract_type")
                        .HasComment("分包类型");

                    b.Property<string>("SyncFlag")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("sync_flag")
                        .HasComment("用作同步数据字段");

                    b.Property<int?>("ZjStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("zj_status")
                        .HasDefaultValueSql("'0'")
                        .HasComment("安监备案状态（0：无  1：温州工薪企业，安监已备案 2：温州工薪企业，安监未备案）");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Cid" }, "idx_cid");

                    b.ToTable("company", null, t =>
                        {
                            t.HasComment("企业表");
                        });

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("WebApplication3.Domain.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CityID"));

                    b.Property<string>("CityNameCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("point");

                    b.HasKey("CityID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("WebApplication3.Domain.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CountryID"));

                    b.Property<Geometry>("Border")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("WebApplication3.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ComplexProperty<Dictionary<string, object>>("Address", "WebApplication3.Domain.Customer.Address#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Line2")
                                .HasColumnType("longtext");

                            b1.Property<string>("PostCode")
                                .IsRequired()
                                .HasColumnType("longtext");
                        });

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WebApplication3.Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Point>("Position")
                        .IsRequired()
                        .HasColumnType("point");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WebApplication3.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.ComplexProperty<Dictionary<string, object>>("BillingAddress", "WebApplication3.Domain.Order.BillingAddress#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Line2")
                                .HasColumnType("longtext");

                            b1.Property<string>("PostCode")
                                .IsRequired()
                                .HasColumnType("longtext");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("ShippingAddress", "WebApplication3.Domain.Order.ShippingAddress#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Line2")
                                .HasColumnType("longtext");

                            b1.Property<string>("PostCode")
                                .IsRequired()
                                .HasColumnType("longtext");
                        });

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebApplication3.Domain.Pub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beers")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DaysVisited")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Pubs");
                });

            modelBuilder.Entity("WebApplication3.Domain.Rider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Riders");
                });

            modelBuilder.Entity("WebApplication3.Domain.Order", b =>
                {
                    b.HasOne("WebApplication3.Domain.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebApplication3.Domain.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
